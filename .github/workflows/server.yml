# This workflow will deploy the application
name: "Server"
on:
  workflow_dispatch:

jobs:
  server-configuration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # # Add or replace dependency steps here
      # - name: Executing remote commands using ssh key
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: "34.193.107.238"
      #     username: ubuntu
      #     key: ${{ secrets.VESTA_CI_SSH_KEY }}
      #     script_stop: true
      #     script: |
      #       cd ~
      #       echo " ---> Instalar Nginx, configurar Cerbot y Passenger"
      #       echo " ---> sudo apt update"
      #       sudo apt update
      #       echo " ---> sudo apt-get --yes --force-yes install nginx"
      #       sudo apt-get --yes --force-yes install nginx
      #       echo " ---> sudo apt-get install libnginx-mod-http-headers-more-filter"
      #       sudo apt-get install libnginx-mod-http-headers-more-filter
      #       echo " ---> sudo snap install core; sudo snap refresh core"
      #       sudo snap install core; sudo snap refresh core
      #       echo " ---> sudo apt-get remove certbot"
      #       sudo apt-get remove certbot
      #       echo " ---> sudo snap install --classic certbot"
      #       sudo snap install --classic certbot
      #       echo " ---> sudo ln -s -f /snap/bin/certbot /usr/bin/certbot"
      #       sudo ln -s -f /snap/bin/certbot /usr/bin/certbot
      #       echo " ---> sudo apt-get install -y dirmngr gnupg apt-transport-https ca-certificates"
      #       sudo apt-get install -y dirmngr gnupg apt-transport-https ca-certificates
      #       echo " ---> sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7"
      #       sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7
      #       echo " ---> sudo sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger focal main > /etc/apt/sources.list.d/passenger.list'"
      #       sudo sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger focal main > /etc/apt/sources.list.d/passenger.list'
      #       echo " ---> sudo apt-get update"
      #       sudo apt-get update
      #       echo " ---> sudo apt-get install -y libnginx-mod-http-passenger"
      #       sudo apt-get install -y libnginx-mod-http-passenger
      #       echo " ---> if [ ! -f /etc/nginx/modules-enabled/50-mod-http-passenger.conf ]; then sudo ln -s /usr/share/nginx/modules-available/mod-http-passenger.load /etc/nginx/modules-enabled/50-mod-http-passenger.conf ; fi"
      #       if [ ! -f /etc/nginx/modules-enabled/50-mod-http-passenger.conf ]; then sudo ln -s /usr/share/nginx/modules-available/mod-http-passenger.load /etc/nginx/modules-enabled/50-mod-http-passenger.conf ; fi
      #       echo " ---> sudo ls /etc/nginx/conf.d/mod-http-passenger.conf"
      #       sudo ls /etc/nginx/conf.d/mod-http-passenger.conf
      #       echo " ---> sudo service nginx restart"
      #       sudo service nginx restart
      #       echo " ---> sudo /usr/bin/passenger-config validate-install"
      #       sudo /usr/bin/passenger-config validate-install
      #       echo " ---> Crear Nginx Virtual Host"
      #       echo " ---> cd /etc/nginx/sites-available"
      #       cd /etc/nginx/sites-available
      #       echo " ---> sudo touch vesta.f-rosal.com.conf"
      #       sudo touch vesta.f-rosal.com.conf
      #       echo " ---> Instalar backend"
      #       echo " ---> Instalar rvm"
      #       echo " ---> sudo apt-get install software-properties-common"
      #       sudo apt-get install software-properties-common
      #       echo " ---> sudo apt-add-repository -y ppa:rael-gc/rvm"
      #       sudo apt-add-repository -y ppa:rael-gc/rvm
      #       echo " ---> sudo apt-get update"
      #       sudo apt-get update
      #       echo " ---> sudo apt-get --yes --force-yes install rvm"
      #       sudo apt-get --yes --force-yes install rvm
      #       echo " ---> sudo usermod -a -G rvm $USER"
      #       sudo usermod -a -G rvm $USER
      #       echo " ---> echo 'source "/etc/profile.d/rvm.sh"' >> ~/.bashrc"
      #       echo 'source "/etc/profile.d/rvm.sh"' >> ~/.bashrc

      # - name: Reboot
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: "34.193.107.238"
      #     username: ubuntu
      #     key: ${{ secrets.VESTA_CI_SSH_KEY }}
      #     script_stop: false
      #     script: |
      #       echo " ---> Reiniciar"
      #       echo " ---> sudo reboot"
      #       sudo reboot
      
      # - name: Wait for the server to be up
      #   uses: nev7n/wait_for_response@v1
      #   with:
      #     url: 'http://34.193.107.238'
      #     responseCode: 200
      #     timeout: 180000 # 3m
      #     interval: 15000 # 15s

      - name: Executing remote commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: "34.193.107.238"
          username: ubuntu
          key: ${{ secrets.VESTA_CI_SSH_KEY }}
          script_stop: true
          script: |
            cd ~
            cat .bashrc
            echo $PATH
            echo " ---> rvm list"
            rvm list
            echo " ---> rvm list known"
            rvm list known
            echo " ---> rvm install 2.7.2"
            rvm install 2.7.2
            echo " ---> rvm list"
            rvm list
            echo " ---> Instalar postgres dependencies"
            echo " ---> sudo apt-get -y install libpq-dev"
            sudo apt-get -y install libpq-dev
            echo " ---> Instalar codigo"
